- name: Ensure SELinux is set to disabled mode
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=disabled

- name: Install mysql repo on CentOS-8
  ansible.builtin.shell: curl -s -L -o /etc/yum.repos.d/mysql.repo https://raw.githubusercontent.com/roboshop-devops-project/mysql/main/mysql.repo
  ignore_errors: true  


- name: Disable mysql module
  ansible.builtin.shell: dnf module disable mysql
  ignore_errors: true


- name: Install the  MySql package
  ansible.builtin.yum:
    name: mysql-community-server
    state: present

- name: Enable and start mysql service
  ansible.builtin.systemd:
    name: mysqld
    state: started
    enabled: true    
    daemon_reload: yes 

- name: Extract DEFAULT_PASSWORD from mysql log file 
  ansible.builtin.shell: grep 'A temporary password' /var/log/mysqld.log | cut -d " " -f 11
  register: out 

- name: Print the default password
  ansible.builtin.debug:
   msg: "{{out.stdout}}"  

- name: Validate whether we were able to connect using default password 
  ansible.builtin.shell: mysql --connect-expired-password -uroot -p{{out.stdout}} < /tmp/set-root-passwd.sql 
  ignore_errors: true
  register: mysql_conn_status

- name: Copy file set-root-password
  ansible.builtin.copy:
    src: set-root-passwd.sql
    dest: /tmp/

- name: If cannot connect using default password, try connecting with new password
  ansible.builtin.shell: echo "show databases;" | mysql --connect-expired-password -uroot -p{{ROBOSHOP_MYSQL_PASSWORD}}
  ignore_errors: true
  when: mysql_conn_status is failed



- name: Recursively remove directory
  ansible.builtin.file:
    path: 
      - "/tmp/mysql.zip"
      - "/tmp/mysql-main"
    state: absent
  ignore_errors: yes   

- name: Download file and place it a directory
  ansible.builtin.get_url:
    url: https://github.com/roboshop-devops-project/mysql/archive/main.zip
    dest: /tmp/mysql.zip

- name: Unarchive a file that is already on the remote machine
  ansible.builtin.unarchive:
    src: /tmp/mysql.zip
    dest: /tmp
    remote_src: yes

- name: Feed data to DB tables
  ansible.builtin.shell: mysql --connect-expired-password -uroot -p{{ROBOSHOP_MYSQL_PASSWORD}} < /tmp/mysql-main/shipping.sql
  ignore_errors: true

- name: adding the user node_exporter to install promethus agent 
  ansible.builtin.shell: useradd -M -r -s /bin/false node_exporter
  ignore_errors: true 

- name: Remove existing files and folders 
  ansible.builtin.file:
    path: 
      - /tmp/node_exporter-1.5.0.linux-amd64.tar.gz
      - /tmp/node_exporter-1.5.0.linux-amd64
    state: absent
  ignore_errors: true  


- name: Download node exporter files
  ansible.builtin.get_url:
    url: https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz
    dest: /tmp/

- name: Unarchive a file that is already on the remote machine
  ansible.builtin.unarchive:
    src: /tmp/node_exporter-1.5.0.linux-amd64.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Copy node_exporter tp bin
  ansible.builtin.copy:
    src:  /tmp/node_exporter-1.5.0.linux-amd64/node_exporter
    dest: /usr/local/bin/
    owner: node_exporter
    group: node_exporter
    mode: '0777'    
    remote_src: yes
